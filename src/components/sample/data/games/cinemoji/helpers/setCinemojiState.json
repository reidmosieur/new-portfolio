{
    "id": "JBMXF73A5X",
    "codeString": "import emojiMovies from '../data/emojiMovies'\nimport shuffleArray from './shuffleArray';\nimport fetchMovieData from './fetchMovieData';\nimport { TMDBMovie } from '../types/types';\n\ntype setCinemojiStateArgs = {\n    setInitialEmojiString: React.Dispatch<React.SetStateAction<string>>;\n    setShuffledMovieKeys: React.Dispatch<React.SetStateAction<string[]>>;\n    setMovieResponses: React.Dispatch<React.SetStateAction<TMDBMovie[]>>;\n}\n\nconst setCinemojiState = ({\n    setMovieResponses,\n    setInitialEmojiString,\n    setShuffledMovieKeys,\n}: setCinemojiStateArgs) => {\n    // Move the random index generation logic here\n    const getRandomIndices = (num: number, max: number) => {\n        const indices = new Set<number>();\n        while (indices.size < num) {\n            indices.add(Math.floor(Math.random() * max));\n        }\n        return Array.from(indices);\n    };\n\n    const movieKeys = Object.keys(emojiMovies);\n    const initialIndex = Math.floor(Math.random() * movieKeys.length);\n    const otherIndices = getRandomIndices(3, movieKeys.length);\n    const filteredOtherIndices = otherIndices.filter(index => index !== initialIndex);\n    const initialMovieKey = movieKeys[initialIndex];\n    const otherMovieKeys = filteredOtherIndices.map(index => movieKeys[index]);\n    const combinedMovieKeys = [initialMovieKey, ...otherMovieKeys];\n    const shuffled = shuffleArray([...combinedMovieKeys]);\n\n    // Function to fetch movie data and update state\n    const fetchAndSetMovieData = async () => {\n        const movieResponses = [];\n        for (const movieKey of shuffled) {\n            const movieData = await fetchMovieData(movieKey);\n            if (movieData.results && movieData.results.length >  0) {\n                const movieResponse = movieData.results[0];\n                // Check if the movieKey matches the initialMovieKey\n                movieResponse.correctAnswer = movieKey === initialMovieKey;\n                movieResponses.push(movieResponse);\n            }\n        }\n        setMovieResponses(movieResponses);\n    };\n\n    // Call the function to fetch and set movie data\n    fetchAndSetMovieData();\n\n    setInitialEmojiString(emojiMovies[initialMovieKey]);\n    setShuffledMovieKeys(shuffled);\n}\n\nexport default setCinemojiState;",
    "title": "Helpers",
    "explanation": "",
    "file": "data/games/cinemoji/helpers/setCinemojiState.ts",
    "toDo": [],
    "displayPath": "data/games/cinemoji/helpers/setCinemojiState.ts"
}
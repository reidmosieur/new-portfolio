{
    "id": "ADOI5TIHYA",
    "codeString": "import { ArtistObject, TopItems, TrackObject } from \"@/components/mySpotify/types/types\";\nimport Card from \"../card\";\nimport { useSpotifyContext } from \"../../context/spotifyStateContext\";\nimport { ReactNode } from \"react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport Sample from \"@/components/sample\";\n\nconst GridCardContainer = ({\n    children,\n}: {\n    children: ReactNode,\n}) => {\n    return (\n        <ul className=\"w-fit h-fit mx-auto columns-1 xl:columns-2 space-y-4\" >\n            {children}\n        </ul>\n    )\n}\n\nconst MyTopSpotifyContainer = () => {\n    const {\n        myTopItems,\n    } = useSpotifyContext();\n\n    const myTopArtists = myTopItems.find((item: TopItems) => item.itemsType === 'artists')?.items;\n    const myTopTracks = myTopItems.find((item: TopItems) => item.itemsType === 'tracks')?.items;\n\n    return (\n        <section className=\"relative w-fit mx-auto flex flex-col flex-wrap gap-8 text-[#76d962]\" >\n            <span className=\"flex flex-nowrap gap-2 justify-between\" >\n                <h2 className=\"text-xl sm:text-2xl lg:text-3xl\" >What I've been listening to:</h2>\n                <Image src={\"/spotify-icon.png\"} alt={\"My listening data courtesy of Spotify\"} width={40} height={40} />\n            </span>\n            <div \n                className=\"max-h-96 px-4 overflow-y-scroll flex flex-wrap justify-center gap-16 spotify-scrollbar\"\n            >\n                {myTopArtists &&\n                    <div className=\"flex flex-col flex-wrap gap-4\" >\n                        <span className=\"text-lg\" >My top artists:</span>\n                        <GridCardContainer>\n                            {myTopArtists.map((item: ArtistObject | TrackObject) => {\n                                if ('genres' in item) {\n                                    return (\n                                        <Card\n                                            key={item.name}\n                                            name={item.name}\n                                            image={item.images![0]}\n                                            genres={item.genres}\n                                        />\n                                    );\n                                }\n                                return null;\n                            })}\n                        </GridCardContainer>\n                    </div>\n                }\n                {myTopTracks &&\n                    <div className=\"flex flex-col flex-wrap gap-4\" >\n                        <span className=\"text-lg\" >My top tracks:</span>\n                        <GridCardContainer>\n                            {myTopTracks.map((item: ArtistObject | TrackObject) => {\n                                if ('album' in item) {\n                                    return (\n                                        <Card\n                                            key={item.name}\n                                            name={item.name}\n                                            image={item.album!.images[0]}\n                                            artist={item.album!.artists[0].name}\n                                        />\n                                    );\n                                }\n                                return null;\n                            })}\n                        </GridCardContainer>\n                    </div>\n                }\n            </div>\n            <small className=\"text-stone-300 text-center\" >Data courtesy of <Link href={'https://www.spotify.com'} className=\"underline text-[#76d962]\" >Spotify</Link></small>\n            <Sample headerJsonName=\"mySpotify\" />\n        </section>\n    )\n};\n\nexport default MyTopSpotifyContainer;",
    "title": "Container",
    "explanation": "",
    "file": "mySpotify/components/container/index.tsx",
    "toDo": [],
    "displayPath": "mySpotify/components/container/index.tsx"
}
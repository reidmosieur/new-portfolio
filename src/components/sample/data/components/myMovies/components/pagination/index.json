{
    "id": "S9VR9CI0PA",
    "codeString": "import { PiCaretDoubleLeft, PiCaretDoubleRight, PiCaretLeft, PiCaretRight } from \"react-icons/pi\";\n\nimport { useMyMoviesContext } from \"../../context/myMoviesStateContext\";\nimport Dropdown from \"@/components/dropdown\";\n\ntype Button = {\n    children: React.ReactNode;\n    onClick?: () => void;\n    disabled?: boolean;\n}\n\nconst Button = ({\n    children,\n    onClick,\n    disabled,\n}: Button) => {\n    return (\n        <button\n            onClick={onClick}\n            className={`w-fit h-fit hover:bg-stone-800`}\n            disabled={disabled}\n        >\n            {children}\n        </button>\n    )\n}\n\nconst Pagination = () => {\n    const {\n        ratedMovies,\n        currentPagination,\n        setCurrentPagination,\n        fetching,\n    } = useMyMoviesContext();\n\n    const resultsPerPage = 20;\n    const totalResults = ratedMovies?.total_results || 0;\n\n    // Calculate the start and end of the range\n    const startRange = (currentPagination.currentPage - 1) * resultsPerPage + 1;\n    const endRange = Math.min(currentPagination.currentPage * resultsPerPage, totalResults);\n\n    const leftRightArrowsClasses = `w-5 h-5 ${fetching && 'text-stone-500'}`;\n\n    return (\n        <div className=\"relative gap-4 flex flex-wrap gap-2\" >\n            <div className=\"w-fit flex flex-nowrap gap-4\" >\n                <Button\n                    onClick={() => setCurrentPagination({\n                        ...currentPagination,\n                        currentPage: currentPagination.currentPage - 1,\n                    })}\n                    disabled={fetching || currentPagination.currentPage === 1}\n                >\n                    <PiCaretLeft className={`${leftRightArrowsClasses} ${currentPagination.currentPage === 1 && 'text-stone-500'}`} />\n                </Button>\n                <small>{startRange} - {endRange} of {totalResults}</small>\n                <Button\n                    onClick={() => setCurrentPagination({\n                        ...currentPagination,\n                        currentPage: currentPagination.currentPage + 1,\n                    })}\n                    disabled={fetching || ratedMovies?.total_pages === currentPagination.currentPage}\n                >\n                    <PiCaretRight className={`${leftRightArrowsClasses} ${ratedMovies?.total_pages === currentPagination.currentPage && 'text-stone-500'}`} />\n                </Button>\n            </div>\n            <Dropdown\n                value={currentPagination.currentSort}\n                className=\"w-fit h-full text-sm bg-black\"\n                options={[\n                    {\n                        name: 'Review Date (Oldest First)',\n                        value: 'created_at.asc',\n                    },\n                    {\n                        name: 'Review Date (Newest First)',\n                        value: 'created_at.desc',\n                    },\n                ]}\n                onChange={(e) => {\n                    setCurrentPagination({\n                        ...currentPagination,\n                         currentSort: e.target.value as 'created_at.asc' | 'created_at.desc',\n                     });\n                }}\n                disabled={fetching}\n            />\n        </div>\n    )\n};\n\nexport default Pagination;",
    "title": "Pagination",
    "explanation": "",
    "file": "myMovies/components/pagination/index.tsx",
    "toDo": [],
    "displayPath": "myMovies/components/pagination/index.tsx"
}